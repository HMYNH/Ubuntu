注册github账号
指定用户名并激活邮箱(需要使用github发送给邮箱的验证数字激活)
==========================================================================

安装github
Linux   : apt-get install git
Windows : 下载Git安装包 按照向导配置并安装
==========================================================================

指定用户名以及邮箱
git config --global user.name "你的用户名"
git config --global user.email "你的邮箱"
可以使用指令 git config --list 检查你的信息配置是否有误

配置SSH密钥 (传输大文件需要使用SSH协议)
ssh-keygen -t rsa -C "cordisdie1083@163.com"
配置成功后
	Linux会默认在配置时使用的用户主目录下建立一个名为.ssh的目录,并保存密钥文件

登录Github 在设置中激活SSH密钥
	新建 -> 将.ssh目录下id_rsa.pub中的内容拷贝即可 -> 完成添加

< 如何使用仓库管理本地文件 >
初始化仓库目录 - 新建一个文件夹用来作为本地仓库 # mkdir class21 ; cd class21
使用指令 git init 将当前目录进行初始化
成功后会有信息提示 已经成功初始化并建立管理目录.git

在你的本地工作区中
	使用 git status 查看状态
	使用 git log 查看版本
		使用 git log --pretty=oneline 进行简化信息的版本显示(一个版本一行内容)
	使用 git add <filename> 将文件添加到暂存区中
	使用 git commit 进行一次版本提交 每次提交时Github希望用户对此次提交进行记录
		使用 git commit -m "笔记" 进行一次快速提交 无误会有输出打印

	使用指令 git checkout -- <filename> 撤销操作(撤销回最后一个版本工作区状态)
	使用指令 git reset --hard <版本号> 回退至目标版本

==============================================================================
将本地仓库推送至云端分支

新建云端仓库

默认没有推送命名(新建推送名需要与云端仓库关联)
使用指令 git remote add <推送命名> git@github.com:<用户名>/<云端仓库名>.git 关联推送名称与云端仓库
使用指令 git remote -v 查看详情
使用指令 git remote rm <推送名称>

使用指令 git push -u <推送名> <分支>

如果推送时提示 
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'github.com:AlexMeson/class21.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

多是由于目标分支中有本地不包含的文件引起的
可以先使用git pull进行合并	git pull <remote> <branch>
	参数 --allow-unrelated-histories 表示允许进行不相关的历史提交 并强制进行合并
然后再使用git push进行推送

=================================================================
下载直接执行 git clone 目标url即可


